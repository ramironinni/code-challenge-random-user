{"version":3,"sources":["utils/useFetch.js","components/Home/UserTile/UserTile.js","components/Home/PaginationBtn/PaginationBtn.js","components/Home/Home.js","components/Navbar/Navbar.js","components/GoBackBtn/GoBackBtn.js","components/UserDetails/TextInfo/TextInfo.js","components/UserDetails/UserDetails.js","components/NotFound/NotFound.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","page","results","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","a","fetch","signal","response","ok","Error","json","getData","then","catch","err","name","console","log","message","abort","UserTile","picture","fullName","city","country","user","to","pathname","state","className","src","alt","PaginationBtn","icon","type","changePage","handleClick","onClick","e","Home","resultValue","window","matchMedia","matches","setPage","setResults","addEventListener","Number","map","index","medium","first","last","location","Navbar","GoBackBtn","TextInfo","text","UserDetails","useLocation","large","login","username","email","NotFound","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gaA6CeA,EA3CE,SAACC,EAAKC,EAAMC,GACzB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAqCA,OAnCAC,qBAAU,WACN,IAAMC,EAAY,IAAIC,gBA+BtB,OA7Ba,uCAAG,8BAAAC,EAAA,sEACWC,MAAMd,EAAMC,EAAM,CACrCc,OAAQJ,EAAUI,SAFV,WACNC,EADM,QAKEC,GALF,sBAMFC,MAAM,8CANJ,uBASOF,EAASG,OAThB,cASNf,EATM,yBAWLA,GAXK,2CAAH,oDAcbgB,GACKC,MAAK,SAACjB,GACHC,EAAQD,GACRK,EAAS,MACTF,GAAa,MAEhBe,OAAM,SAACC,GACa,eAAbA,EAAIC,KACJC,QAAQC,IAAI,kBAEZjB,EAASc,EAAII,SACbpB,GAAa,OAIlB,kBAAMI,EAAUiB,WACxB,CAAC5B,EAAKC,EAAMC,IAER,CAAEE,OAAME,YAAWE,U,4BCFfqB,EArCE,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAClD,OACI,eAAC,IAAD,CACIC,GAAI,CAAEC,SAAU,gBAAiBC,MAAO,CAAEH,SAC1CI,UAAU,YAFd,UAII,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,WAAWC,IAAKT,EAASU,IAAI,mBAEhD,sBAAKF,UAAU,2BAAf,UACI,sBAAKA,UAAU,gCAAf,UACI,sBAAMA,UAAU,qCAAhB,oBAGA,mBAAGA,UAAU,qCAAb,SACKP,OAGT,sBAAKO,UAAU,gCAAf,UACI,sBAAMA,UAAU,qCAAhB,uBAGA,mBAAGA,UAAU,gCAAb,SAA8CN,OAElD,sBAAKM,UAAU,gCAAf,UACI,sBAAMA,UAAU,qCAAhB,oBAGA,mBAAGA,UAAU,mCAAb,SACKL,cCnBVQ,EAbO,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAC7C,OACI,wBACIP,UAAW,kBAAoBK,EAC/BG,QAAS,SAACC,GACNF,EAAYD,IAHpB,SAMI,sBAAMN,UAAU,iBAAhB,SAAkCI,OCoF/BM,EAtFF,WACT,IAAIC,EAGAA,EADAC,OAAOC,WAAW,uBAAuBC,QAC3B,EACPF,OAAOC,WAAW,sBAAsBC,QACjC,EAEA,EAGlB,MAAwBjD,mBAAS,GAAjC,mBAAOF,EAAP,KAAaoD,EAAb,KACA,EAA8BlD,mBAAS8C,GAAvC,mBAAO/C,EAAP,KAAgBoD,EAAhB,KAYAJ,OAAOK,iBAAiB,UAVH,WACbL,OAAOC,WAAW,uBAAuBC,QACzCE,EAAW,GACJJ,OAAOC,WAAW,sBAAsBC,QAC/CE,EAAW,GAEXA,EAAW,MAMnB,MAAmCvD,EAAS,4EAAD,OACqCG,EADrC,mBAEvCD,EACAC,GAHIE,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAAWE,EAAzB,EAAyBA,MAMnBqC,EAAc,SAACD,KACjBA,EAAaY,OAAOZ,IACF,GAAK3C,GAAQ,IAAQ2C,EAAa,GAAK3C,EAAO,IAC5DoD,EAAQpD,EAAO2C,IAIvB,OACI,sBAAKN,UAAU,OAAf,UACKlC,GACG,qBAAKkC,UAAU,UAAf,SACI,qBAAKA,UAAU,uBAAf,SACKlC,EAAKF,QAAQuD,KAAI,SAACvB,EAAMwB,GAAP,OACd,cAAC,EAAD,CACI5B,QAASI,EAAKJ,QAAQ6B,OACtB5B,SACIG,EAAKV,KAAKoC,MAAQ,IAAM1B,EAAKV,KAAKqC,KAEtC7B,KAAME,EAAK4B,SAAS9B,KACpBC,QAASC,EAAK4B,SAAS7B,QACvBC,KAAMA,GACDwB,UAMxBpD,GACG,qBAAKgC,UAAU,0BAAf,SACI,qBAAKA,UAAU,gBAAf,2BAGP9B,GAAS,8BAAMA,IAChB,qBAAK8B,UAAU,uBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,cAAC,EAAD,CACII,KAAK,kBACLC,KAAK,wBACLC,WAAW,KACXC,YAAaA,IAEjB,qBAAKP,UAAU,iCAAf,SAAiDrC,IACjD,cAAC,EAAD,CACIyC,KAAK,gBACLC,KAAK,sBACLC,WAAW,IACXC,YAAaA,a,QCtEtBkB,G,MAXA,WACX,OACI,sBAAKzB,UAAU,SAAf,UACI,cAAC,OAAD,CAAMH,GAAG,IAAIG,UAAU,cAAvB,SACI,sBAAMA,UAAU,iBAAhB,oBAEJ,oBAAIA,UAAU,eAAd,kC,eCEG0B,G,MARG,WACd,OACI,eAAC,IAAD,CAAM7B,GAAG,IAAIG,UAAU,cAAvB,UACI,sBAAMA,UAAU,iBAAhB,6BADJ,gBCQO2B,G,MAXE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMxB,EAAW,EAAXA,KACtB,OACI,sBAAKJ,UAAU,wCAAf,UACI,sBAAMA,UAAU,kDAAhB,SACKI,IAEL,qBAAKJ,UAAU,mCAAf,SAAmD4B,SCyBhDC,G,MA5BK,WAChB,IACMjC,EADOkC,wBACK/B,MAAMH,KAExB,OACI,qBAAKI,UAAU,eAAf,SACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,iCAAf,SACI,qBAAKC,IAAKL,EAAKJ,QAAQuC,MAAO7B,IAAI,WAEtC,sBAAKF,UAAU,mCAAf,UACI,cAAC,EAAD,CACI4B,KAAMhC,EAAKV,KAAKoC,MAAQ,IAAM1B,EAAKV,KAAKqC,KACxCnB,KAAK,WAET,cAAC,EAAD,CAAUwB,KAAMhC,EAAKoC,MAAMC,SAAU7B,KAAK,QAC1C,cAAC,EAAD,CAAUwB,KAAMhC,EAAKsC,MAAO9B,KAAK,UACjC,cAAC,EAAD,CAAUwB,KAAMhC,EAAK4B,SAAS9B,KAAMU,KAAK,cACzC,cAAC,EAAD,CAAUwB,KAAMhC,EAAK4B,SAAS7B,QAASS,KAAK,iBAGpD,cAAC,EAAD,WCZD+B,G,MAZE,WACb,OACI,sBAAKnC,UAAU,sBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sCACA,4DAEJ,cAAC,EAAD,SCkBGoC,MArBf,WACI,OACI,cAAC,IAAD,CAAeC,SAAUC,8BAAzB,SACI,sBAAKtC,UAAU,MAAf,UACI,cAAC,EAAD,IACA,eAAC,SAAD,WACI,cAAC,QAAD,CAAOuC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,QAAD,CAAOA,KAAK,gBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,QAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,EAAD,eCRTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5D,MAAK,YAAkD,IAA/C6D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7466f341.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url, page, results) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        const getData = async () => {\n            const response = await fetch(url + page, {\n                signal: abortCont.signal,\n            });\n\n            if (!response.ok) {\n                throw Error('could not fetch the data for that resource');\n            }\n\n            const data = await response.json();\n\n            return data;\n        };\n\n        getData()\n            .then((data) => {\n                setData(data);\n                setError(null);\n                setIsPending(false);\n            })\n            .catch((err) => {\n                if (err.name === 'AbortError') {\n                    console.log('fetch aborted');\n                } else {\n                    setError(err.message);\n                    setIsPending(false);\n                }\n            });\n\n        return () => abortCont.abort();\n    }, [url, page, results]);\n\n    return { data, isPending, error };\n};\n\nexport default useFetch;\n","import './UserTile.css';\nimport { Link } from 'react-router-dom';\n\nconst UserTile = ({ picture, fullName, city, country, user }) => {\n    return (\n        <Link\n            to={{ pathname: '/user-details', state: { user } }}\n            className=\"user-tile\"\n        >\n            <div className=\"user-img-container\">\n                <img className=\"user-img\" src={picture} alt=\"user-profile\" />\n            </div>\n            <div className=\"user-text-info-container\">\n                <div className=\"user-text-info-item-container\">\n                    <span className=\"user-text-info-icon material-icons\">\n                        person\n                    </span>\n                    <p className=\"user-text-info-item user-full-name\">\n                        {fullName}\n                    </p>\n                </div>\n                <div className=\"user-text-info-item-container\">\n                    <span className=\"user-text-info-icon material-icons\">\n                        apartment\n                    </span>\n                    <p className=\"user-text-info-item user-city\">{city}</p>\n                </div>\n                <div className=\"user-text-info-item-container\">\n                    <span className=\"user-text-info-icon material-icons\">\n                        public\n                    </span>\n                    <p className=\"user-text-info-item user-country\">\n                        {country}\n                    </p>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default UserTile;\n","const PaginationBtn = ({ icon, type, changePage, handleClick }) => {\n    return (\n        <button\n            className={'pagination-btn ' + type}\n            onClick={(e) => {\n                handleClick(changePage);\n            }}\n        >\n            <span className=\"material-icons\">{icon}</span>\n        </button>\n    );\n};\n\nexport default PaginationBtn;\n","import useFetch from '../../utils/useFetch';\nimport './Home.css';\nimport UserTile from './UserTile/UserTile';\nimport PaginationBtn from './PaginationBtn/PaginationBtn';\nimport { useState } from 'react';\n\nconst Home = () => {\n    let resultValue;\n\n    if (window.matchMedia('(min-width: 1024px)').matches) {\n        resultValue = 8;\n    } else if (window.matchMedia('(min-width: 720px)').matches) {\n        resultValue = 4;\n    } else {\n        resultValue = 2;\n    }\n\n    const [page, setPage] = useState(1);\n    const [results, setResults] = useState(resultValue);\n\n    const handleResize = () => {\n        if (window.matchMedia('(min-width: 1024px)').matches) {\n            setResults(8);\n        } else if (window.matchMedia('(min-width: 720px)').matches) {\n            setResults(4);\n        } else {\n            setResults(2);\n        }\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    const { data, isPending, error } = useFetch(\n        `https://randomuser.me/api/?inc=name,location,email,login,picture&results=${results}&seed=abc&page=`,\n        page,\n        results\n    );\n\n    const handleClick = (changePage) => {\n        changePage = Number(changePage);\n        if ((changePage > 0 && page <= 50) || (changePage < 0 && page > 1)) {\n            setPage(page + changePage);\n        }\n    };\n\n    return (\n        <div className=\"home\">\n            {data && (\n                <div className=\"wrapper\">\n                    <div className=\"user-tiles-container\">\n                        {data.results.map((user, index) => (\n                            <UserTile\n                                picture={user.picture.medium}\n                                fullName={\n                                    user.name.first + ' ' + user.name.last\n                                }\n                                city={user.location.city}\n                                country={user.location.country}\n                                user={user}\n                                key={index}\n                            />\n                        ))}\n                    </div>\n                </div>\n            )}\n            {isPending && (\n                <div className=\"users-loading-container\">\n                    <div className=\"users-loading\">Loading ...</div>\n                </div>\n            )}\n            {error && <div>{error}</div>}\n            <div className=\"pagination-container\">\n                <div className=\"pagination-controllers\">\n                    <PaginationBtn\n                        icon=\"navigate_before\"\n                        type=\"pagination-btn-before\"\n                        changePage=\"-1\"\n                        handleClick={handleClick}\n                    />\n                    <div className=\"pagination-current-page-number\">{page}</div>\n                    <PaginationBtn\n                        icon=\"navigate_next\"\n                        type=\"pagination-btn-next\"\n                        changePage=\"1\"\n                        handleClick={handleClick}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport './Navbar.css';\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\">\n            <Link to=\"/\" className=\"navbar-icon\">\n                <span className=\"material-icons\">home</span>\n            </Link>\n            <h1 className=\"navbar-title\">Meet Our Staff!</h1>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import { Link } from 'react-router-dom';\nimport './GoBackBtn.css';\n\nconst GoBackBtn = () => {\n    return (\n        <Link to=\"/\" className=\"go-back-btn\">\n            <span className=\"material-icons\">navigate_before</span> Go back\n        </Link>\n    );\n};\n\nexport default GoBackBtn;\n","import './TextInfo.css';\n\nconst TextInfo = ({ text, icon }) => {\n    return (\n        <div className=\"user-details-text-info-item-container\">\n            <span className=\"user-details-text-info-item-icon material-icons\">\n                {icon}\n            </span>\n            <div className=\"user-details-text-info-item-text\">{text}</div>\n        </div>\n    );\n};\n\nexport default TextInfo;\n","import { useLocation } from 'react-router-dom';\nimport GoBackBtn from '../GoBackBtn/GoBackBtn';\nimport TextInfo from './TextInfo/TextInfo';\nimport './UserDetails.css';\n\nconst UserDetails = () => {\n    const data = useLocation();\n    const user = data.state.user;\n\n    return (\n        <div className=\"user-details\">\n            <div className=\"wrapper\">\n                <div className=\"user-details-tile\">\n                    <div className=\"user-details-picture-container\">\n                        <img src={user.picture.large} alt=\"user\" />\n                    </div>\n                    <div className=\"user-details-text-info-container\">\n                        <TextInfo\n                            text={user.name.first + ' ' + user.name.last}\n                            icon=\"person\"\n                        />\n                        <TextInfo text={user.login.username} icon=\"add\" />\n                        <TextInfo text={user.email} icon=\"email\" />\n                        <TextInfo text={user.location.city} icon=\"apartment\" />\n                        <TextInfo text={user.location.country} icon=\"public\" />\n                    </div>\n                </div>\n                <GoBackBtn />\n            </div>\n        </div>\n    );\n};\n\nexport default UserDetails;\n","import './NotFound.css';\nimport GoBackBtn from '../GoBackBtn/GoBackBtn';\n\nconst NotFound = () => {\n    return (\n        <div className=\"not-found-container\">\n            <div className=\"not-found\">\n                <p>Oops!</p>\n                <p>This page doesn't exist.</p>\n            </div>\n            <GoBackBtn />\n        </div>\n    );\n};\n\nexport default NotFound;\n","import Home from '../Home/Home';\nimport Navbar from '../Navbar/Navbar';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport UserDetails from '../UserDetails/UserDetails';\nimport NotFound from '../NotFound/NotFound';\n\nfunction App() {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div className=\"App\">\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route path=\"/user-details\">\n                        <UserDetails />\n                    </Route>\n                    <Route path=\"*\">\n                        <NotFound />\n                    </Route>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}